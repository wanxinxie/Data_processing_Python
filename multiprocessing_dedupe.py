# -*- coding: utf-8 -*-
"""multiprocessing_dedupe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d2NpDZr8S1gom53_fHQICK--GMpzV4RL
"""

import pandas as pd
import numpy as np
from itertools import chain
import concurrent.futures
import tqdm
from multiprocessing import Process
import os

def dedupe(csv_filen_ame):
  df = pd.read_csv(csv_filen_ame)
  dfx = df[['x']].astype('str').astype('int64')
  dfy = df[[' y']].astype('str').astype('int64')
  dfh = df[[' Hue']].astype('str').astype('float128')
  dft = pd.concat([dfx, dfy, dfh], axis=1)

  x_dedupe = []
  y_dedupe = []
  x_uniquel = np.unique(np.array(sorted(list(chain.from_iterable(dfx.values.tolist()))))).tolist()
  for i in x_uniquel:
    y_val = dft[(dft['x'] == i)][[' y']]
    y_value = y_val.values.tolist()
    y_sorted_value = sorted(list(chain.from_iterable(y_value)))
    for j in range(len(y_sorted_value)-1):
      diff = y_sorted_value[j+1] - y_sorted_value[j]
      if diff > 5:
        x_dedupe.append(i)
        y_dedupe.append(y_sorted_value[j])
    x_dedupe.append(i)
    y_dedupe.append(y_sorted_value[len(y_sorted_value)-1])
    
  x_dedupe_arr = np.array(x_dedupe)
  y_dedupe_arr = np.array(y_dedupe)
  hue_dedupe=[]
  unique_coord = tuple(zip(x_dedupe_arr, y_dedupe_arr))
  for (i, j) in unique_coord:
    hue_dedupe.append(dft[(dft['x'] == i) & (dft[' y']== j)][[' Hue']].values[0][0])

  hue_dedupe_arr = np.array(hue_dedupe)

  unew = pd.DataFrame({'x':x_dedupe_arr, 'y' : y_dedupe_arr, 'Hue':hue_dedupe_arr})

  x_remove = []
  y_remove = []
  hue_remove = []
  for i in range(len(x_uniquel)-1):
    y_val = unew[(unew['x'] == x_uniquel[i])][['y']]
    y_value = y_val.values.tolist()
    y_sorted_value = sorted(list(chain.from_iterable(y_value)))


    y_val_1 = unew[(unew['x'] == x_uniquel[i+1])][['y']]
    y_value_1 = y_val_1.values.tolist()
    y_sorted_value_1 = sorted(list(chain.from_iterable(y_value_1)))

    for k in y_sorted_value:
      for j in y_sorted_value_1:
        diff = (k - j)**2
        if diff < 10:
          x_remove.append(x_uniquel[i])
          y_remove.append(k)
          hue_temp = unew[(unew['x']==x_uniquel[i]) & (unew['y']==k)][['Hue']].values[0][0]
          hue_remove.append(hue_temp)
  
  arr_x_remove = np.array(x_remove)
  arr_y_remove = np.array(y_remove)
  arr_hue_remove = np.array(hue_remove)
  remove_df = pd.DataFrame({'x':arr_x_remove, 'y' : arr_y_remove, 'Hue':arr_hue_remove})

  df_final = pd.merge(unew, remove_df, on=['x','y','Hue'], how='outer', indicator=True).query("_merge != 'both'").drop('_merge', axis=1).reset_index(drop=True)
  df_final.to_csv('dedupe_final.csv')
  return (df_final)

processes = []
num_processes = os.cpu_count()

for i in range(num_processes):
  process = Process(target=dedupe, args=('data.csv',))
  processes.append(process)

for process in processes:
  process.start()

for process in processes:
  process.join()

